/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.24
 * Generated at: 2020-02-12 11:36:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.*;
import java.io.*;
import org.json.*;
import java.lang.Object.*;

public final class cadastrar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.net");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("org.json");
    _jspx_imports_packages.add("java.lang.Object");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Cadastro</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		String nome = request.getParameter("nome");
		String cpf = request.getParameter("cpf");
		String dataNasc = request.getParameter("dataNasc");
		String endereco = request.getParameter("endereco");
		String telefone = request.getParameter("telefone");
		String senhaLogin = request.getParameter("senhaLogin");
		String senhaAcesso = request.getParameter("senhaAcesso");
		String recebedor = "";
		
		if( (nome != null) && (cpf != null) && (dataNasc != null) && (endereco != null) && (telefone != null) && (senhaLogin != null) && (senhaAcesso != null) ){
			
			//CRIANDO URL DE CONEXÃO
			URL url = new URL("http://10.87.203.16:8080/WebService/service");
			
			JSONObject json = new JSONObject();
			json.put("nome", nome);
			json.put("cpf", cpf);
			json.put("dataNasc", dataNasc);
			json.put("endereco", endereco);
			json.put("telefone", telefone);
			json.put("senhaLogin", senhaLogin);
			json.put("senhaAcesso", senhaAcesso);
			
			//CRIANDO SESSÃO
			HttpURLConnection con = (HttpURLConnection) url.openConnection();
			
			//ALTERNAR ENTRE POST E GET
			con.setRequestMethod("POST");
			
			//HABILITAR ENVIO DE DADOS VIA OUTPUT
			con.setDoOutput(true);
			
			//ENVIANDO INFORMAÇÕES POR POST
			String parametros = "id=2&tipo=1&valores="+json.toString();
			DataOutputStream wr = new DataOutputStream(con.getOutputStream());
			wr.writeBytes(parametros);
			
			//CRIANDO BUFFER DE LEITURA COM O RETORNO DO SERVLET
			BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream()));
			
			String apnd = "", linha = "";
			
			//LENDO O CONTEUDO OBTIDO DO SERVLET
			while((linha = br.readLine()) != null) apnd += linha;
			recebedor = apnd;
		}
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<form method=\"post\" action=\"#\">\r\n");
      out.write("\t\t<input type=\"text\" placeholder=\"Nome\" name=\"nome\" /><br>\r\n");
      out.write("\t\t<input type=\"text\" placeholder=\"CPF\" name=\"cpf\" /><br>\r\n");
      out.write("\t\t<input type=\"text\" placeholder=\"Data de nascimento\" name=\"dataNasc\" /><br>\r\n");
      out.write("\t\t<input type=\"text\" placeholder=\"Endereço\" name=\"endereco\" /><br>\r\n");
      out.write("\t\t<input type=\"text\" placeholder=\"Telefone\" name=\"telefone\" /><br>\r\n");
      out.write("\t\t<input type=\"text\" placeholder=\"Senha de login\" name=\"senhaLogin\" /><br>\r\n");
      out.write("\t\t<input type=\"text\" placeholder=\"Senha de acesso\" name=\"senhaAcesso\" /><br>\r\n");
      out.write("\t\t<button type=\"submit\">Enviar</button><br>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t");

		if( (nome != null) && (cpf != null) && (dataNasc != null) && (endereco != null) && (telefone != null) && (senhaLogin != null) && (senhaAcesso != null) ){
			JSONObject obj = new JSONObject(recebedor);
			out.print("Seu número da conta é: "+obj.getString("numero_conta"));
		}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
